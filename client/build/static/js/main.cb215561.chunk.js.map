{"version":3,"sources":["components/Jumbotron/eplogo.jpg","components/Jumbotron/index.js","components/Quiz/index.js","components/BasicTable/index.js","components/Grid/index.js","utils/API.js","pages/Course.js","pages/Question.js","pages/Results.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Jumbotron","react_default","a","createElement","className","src","require","Quiz","props","key","quiz","_id","scope","react_router_dom","to","concat","index","taken","href","target","BasicTable","quizzes","map","components_Quiz","midterm","final","Container","_ref","fluid","children","Row","_ref2","Col","_ref3","size","split","join","API","getQuiz","id","axios","get","getAllQuizzes","then","res","data","storeScore","score","put","Course","state","courseGrade","_this2","this","setState","location","currentQuizScore","catch","err","console","log","components_Jumbotron","components_BasicTable","Component","Question","currentQuiz","quizResults","question","answer","actualAnswer","incorrect","wrongAnswers","loadQuestions","_this","match","params","prepareQuiz","answerClick","e","questionId","length","substring","parseInt","array","incorrectArray","wrongAnswersArray","value","push","alert","results","toString","questions","forEach","shuffleArray","answers","i","j","Math","floor","random","_this3","quizNo","onClick","role","pathname","Results","showResults","find","item","correctAnswer","findQuestion","findCorrectAnswer","App","react_router","exact","path","component","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cb215561.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eplogo.30a51c39.jpg\";","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron() {\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            {/* <div className = \"logo\"> */}\r\n            <img className= \"rounded\" src={require(\"./eplogo.jpg\")} />\r\n            {/* </div> */}\r\n            <h1 className=\"epu\">AP Biology</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","import React from 'react';\r\nimport \"./style.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Quiz(props) {\r\n    return (\r\n        <tr key={props.quiz._id}>\r\n            <th scope=\"row\" > <Link to={`/question/${props.quiz._id}`} \r\n            >Quiz {props.index + 1} </Link></th>\r\n            <td>{props.quiz.taken}</td>\r\n            <td><a href=\"#\" target=\"blank\">Retake</a></td>\r\n            <td><a href=\"#\" target=\"blank\">Practice</a></td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\nimport \"./style.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Quiz from \"../Quiz\"\r\n\r\n\r\nfunction BasicTable(props) {\r\n    return (\r\n        <table className=\"table table-striped\">\r\n            <tbody>\r\n                {props.quizzes.map((quiz, index) =>\r\n                    (\r\n                        <Quiz\r\n                            quiz={quiz}\r\n                            index={index}/>\r\n                    )\r\n                )}\r\n\r\n                <tr>\r\n                    <th scope=\"row\"><Link to={`/question/`}>Midterm </Link></th>\r\n                    <td>{props.midterm}</td>\r\n                    <td><a href=\"#\" target=\"blank\">Retake</a></td>\r\n                    <td><a href=\"#\" target=\"blank\">Practice</a></td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\"><Link to={`/question/`}>Final </Link></th>\r\n                    <td>{props.final}</td>\r\n                    <td><a href=\"#\" target=\"blank\">Retake</a></td>\r\n                    <td><a href=\"#\" target=\"blank\">Practice</a></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default BasicTable;\r\n\r\n","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n    // Gets a specific quiz\r\n  getQuiz: function(id) {\r\n    return axios.get(\"/api/quiz/\" + id);\r\n  },\r\n\r\n    // Gets all quizzes\r\n  getAllQuizzes: function() {\r\n      return axios.get(\"http://localhost:3001/api/quiz\")\r\n      .then(res => res.data);\r\n  },\r\n\r\n    //updates the user's scores\r\n  storeScore: function (id, score) {\r\n    return axios.put(\"/api/quiz/\" + id + \"/scores\", {taken: score} );\r\n  }\r\n  \r\n}","import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport BasicTable from \"../components/BasicTable\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport \"./courseStyle.css\";\r\nimport API from \"../utils/API\"\r\n\r\nclass Course extends Component {\r\n    state = {\r\n        courseGrade: 0,\r\n        quizzes: [],\r\n        midterm: \"Untaken\",\r\n        final: \"Untaken\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        API.getAllQuizzes()\r\n            .then(res => {\r\n                this.setState({ quizzes: res })\r\n\r\n                this.setState({ courseGrade: this.props.location.state.currentQuizScore })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n   \r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <Jumbotron />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <div className=\"summary\">\r\n                        <h2>10 quizzes - 1 midterm - 1 final - Course Average: <span className=\"finalGrade\">{this.state.courseGrade}%</span></h2>\r\n                    </div>\r\n                </Row>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <BasicTable\r\n                            quizzes={this.state.quizzes}\r\n                            midterm={this.state.midterm}\r\n                            final={this.state.final}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Course;","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport \"./questionStyle.css\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Question extends Component {\r\n    state = {\r\n        currentQuiz: {},\r\n        currentQuizScore: 0,\r\n        quizResults: [\r\n            { question: \"1\", answer: \"\", actualAnswer: \"\" },\r\n            { question: \"2\", answer: \"\", actualAnswer: \"\" },\r\n            { question: \"3\", answer: \"\", actualAnswer: \"\" },\r\n            { question: \"4\", answer: \"\", actualAnswer: \"\" },\r\n            { question: \"5\", answer: \"\", actualAnswer: \"\" },\r\n            { question: \"6\", answer: \"\", actualAnswer: \"\" },\r\n            { question: \"7\", answer: \"\", actualAnswer: \"\" },\r\n            { question: \"8\", answer: \"\", actualAnswer: \"\" },\r\n            { question: \"9\", answer: \"\", actualAnswer: \"\" },\r\n            { question: \"10\", answer: \"\", actualAnswer: \"\" }\r\n        ],\r\n        incorrect: [],\r\n        wrongAnswers: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadQuestions();\r\n    }\r\n\r\n    loadQuestions = () => {\r\n        API.getQuiz(this.props.match.params.id)\r\n            .then(res => {\r\n                this.prepareQuiz(res.data);\r\n                this.setState({ currentQuiz: res.data })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    answerClick = (e) => {\r\n        // grabbing question number using the answer id\r\n        const questionId = (e.target.id.length === 3) ? e.target.id.substring(0, 1) : e.target.id.substring(0, 2);\r\n        // determining the index for the question id on line 47\r\n        const index = parseInt(questionId) - 1;\r\n        // determine whether answer property is empty \r\n        if (this.state.quizResults[index].answer === \"\") {\r\n            // making a copy of the array in state\r\n            const array = this.state.quizResults\r\n            const incorrectArray = this.state.incorrect\r\n            const wrongAnswersArray = this.state.wrongAnswers\r\n\r\n            // setting the answer value for the correct question\r\n            array[index].answer = e.target.value\r\n\r\n            array[index].actualAnswer = e.target.id\r\n\r\n            // determine if answer is correct\r\n            if (e.target.value === 1) {\r\n                console.log(\"answer is correct\");\r\n                this.setState({\r\n                    currentQuizScore: this.state.currentQuizScore + 10,\r\n                    quizResults: array\r\n                })\r\n            }\r\n            else {\r\n                console.log(\"answer is incorrect\");\r\n                this.setState({\r\n                    quizResults: array\r\n                })\r\n                incorrectArray.push(questionId);\r\n                wrongAnswersArray.push(e.target.id)\r\n                this.setState({\r\n                    incorrect: incorrectArray,\r\n                })\r\n            }\r\n        } else {\r\n            alert(\"You already clicked on an answer!\");\r\n        }\r\n    }\r\n\r\n    results = (id) => {\r\n        API.storeScore(id, this.state.currentQuizScore.toString())\r\n            .then(res => {\r\n                // console.log(res);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    prepareQuiz(currentQuiz) {\r\n        currentQuiz.questions.forEach(question => { this.shuffleArray(question.answers) })\r\n    }\r\n\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        } return array\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.currentQuiz.questions ?\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col size=\"md-12\">\r\n                            <div className=\"card text-center\">\r\n                                <div className=\"card-header\">\r\n                                    <h1> Biology Quiz {this.state.currentQuiz.quizNo} </h1>\r\n                                </div>\r\n\r\n                                {this.state.currentQuiz.questions.map((question, index) =>\r\n                                    (\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\">Question {index + 1}</h5>\r\n                                            <div className=\"card-box\">\r\n                                                <p className=\"card-text\">{question[\"question\"]} </p>\r\n                                                <ul className=\"list-group list-group-flush\">\r\n                                                    {question.answers.map((answer) =>\r\n                                                        (\r\n                                                            <li className=\"list-group-item list-group-item-action flex-column align-items-start\"\r\n                                                                value={answer.value} id={answer.id} onClick={this.answerClick}>\r\n                                                                {answer.answer}\r\n                                                            </li>\r\n                                                        )\r\n                                                    )}\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                )}\r\n\r\n                                <div>\r\n                                    <h1 className=\"results\" role=\"button\">                                   \r\n\r\n                                        <Link to={{\r\n                                            pathname: \"/results/\" + this.state.currentQuiz._id,\r\n                                            state: {\r\n                                                quizResults: this.state.quizResults,\r\n                                                currentQuizScore: this.state.currentQuizScore,\r\n                                                onClick: this.results(this.state.currentQuiz._id),\r\n                                                incorrect: this.state.incorrect,\r\n                                                currentQuiz: this.state.currentQuiz,\r\n                                                wrongAnswers: this.state.wrongAnswers\r\n                                            },\r\n                                        }} >Click here to see your results!</Link>\r\n                                       \r\n                                    </h1>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container> : null\r\n        );\r\n    }\r\n}\r\n\r\n// ReactDOM.render(<App />, document.querySelector('#app'));\r\n\r\nexport default Question;","import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport API from \"../utils/API\";\r\nimport \"./resultsStyle.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Results extends Component {\r\n    state = {\r\n        currentQuiz: \"\",\r\n        currentQuizScore: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.showResults();\r\n    }\r\n\r\n    showResults() {\r\n        console.log(this.props.location.state.wrongAnswers)\r\n        API.getQuiz(this.props.match.params.id)\r\n            .then(res => {\r\n                this.setState({ currentQuiz: res.data });\r\n                this.setState({ currentQuizScore: res.data.taken });\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    findQuestion(question) {\r\n        const myQuestion = this.props.location.state.currentQuiz.questions.find((item) => {\r\n            if (item.questionId == question) {\r\n                return item.question.toString();\r\n            }\r\n        })\r\n        return myQuestion.question\r\n    }\r\n\r\n    findCorrectAnswer(question) {\r\n        const myRightAnswer = this.props.location.state.currentQuiz.questions.find((item) => {\r\n            if (item.questionId == question) {\r\n                return item.correctAnswer.toString();\r\n            }\r\n        })\r\n        return myRightAnswer.correctAnswer\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.currentQuiz.questions ?\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col size=\"md-12\">\r\n                            <Jumbotron />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className=\"thisquizresults\">\r\n                            <h2>Quiz {this.state.currentQuiz.quizNo} Score: <span className=\"quizScore\">\r\n                                {this.props.location.state.currentQuizScore}%</span></h2>\r\n                        </div>\r\n                    </Row>\r\n\r\n                    {this.props.location.state.incorrect.map((question, index) =>\r\n                        (\r\n                            <Row>\r\n                                <Col size=\"md-12\">\r\n                                    <div className=\"resultsCard\">\r\n                                        <div className=\"card-body\">\r\n                                            <ul className=\"list-group list-group-flush\">\r\n                                                <li className=\"list-group-item\"><span className=\"wrong\">You answered Question {question} incorrectly.</span></li>\r\n                                                <li className=\"list-group-item\">This was the question: {this.findQuestion(question)}\r\n                                                </li>\r\n                                                <li className=\"list-group-item\"><span className=\"right\">This was the correct answer: {this.findCorrectAnswer(question)}</span>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        )\r\n                    )}\r\n\r\n                    <div>\r\n                        <h1 className=\"results\" role=\"button\">\r\n                            <Link to={{\r\n                                pathname: \"/\",\r\n                                state: {\r\n                                    currentQuizScore: this.state.currentQuizScore\r\n                                },\r\n                            }} >Return to Main Course Page</Link>\r\n                        </h1>\r\n                    </div>\r\n\r\n                </Container> : null\r\n        );\r\n    }\r\n}\r\n\r\nexport default Results;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Course from \"./pages/Course\";\nimport Question from \"./pages/Question\";\nimport Results from \"./pages/Results\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={Course} />\n          <Route exact path=\"/question/:id\" component={Question} />\n          <Route exact path=\"/results/:id\" component={Results} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}